_target_: open_apps.agent.VLLMAgentArgs

model_name: null
model_pretty_name: null

# --- ChatModel Flags ---

api_key: "AMI_RULZ"
port: "8000"
hostname: null
temperature: null
max_tokens: null
host_name_updated_on: null

# both ax tree options and vision options
# see BrowserGym paper, first page of appendix for details on these options
custom_actions: ["click", "fill", "dblclick", "clear", "select_option", "drag_and_drop", "hover", "go_back", "go_forward","goto",  "scroll", "mouse_click", "mouse_dblclick", "mouse_move", "mouse_down", "mouse_up", "mouse_click", "mouse_dblclick", "mouse_drag_and_drop", "mouse_upload_file", "keyboard_down", "keyboard_up", "keyboard_press", "keyboard_type", "keyboard_insert_text"]

# --- observation flags ---

use_axtree: True # enable AXTREE observation
use_screenshot: True # enable screenshot observation


# ---- these are not really changed, but leaving it here for future reference ----
# use_html: False # enable HTML observation
use_som: False  # Add a set of marks to the screenshot.
# extract_visible_tag: False # Add a "visible" tag to visible elements in the AXTree.
# extract_clickable_tag: False #  Add a "clickable" tag to clickable elements in the AXTree.
extract_coords: False # Add the coordinates of the elements.
# filter_visible_elements_only: False  # filter elements that are not visible
# use_focused_element: False  # use focused element

# --- history flags ---
use_history: True  # enable history
use_action_history: True  # enable action history, the use_history flag must be True
use_think_history: True  # enable think history,  the use_history flag must be True
# --- Agent Flags ---
use_thinking: True  # enable thoughts
use_concrete_example: True  # if true, we will include a concrete example in the prompt
use_abstract_example: True  #if true, we will include an abstract example in the prompt
# --- Prompt Flags ---
prompt_txt:
  system_prompt: null # takes default system prompt from dp lib
  output_format: |
    <action>
    <\action>
    <think>
    <\think>
  think_prompt: null # takes default system prompt from dp lib
  think_abstract_example: null # takes default system prompt from dp lib
  think_concrete_example: null # takes default system prompt from dp lib
  action_prompt: null # if specified will directly define your action prompt and will ignore browsergym default of listing the API with descriptions
  action_abstract_example: |
    For links, checkboxes, buttons, etc. in the Axtree use the following action:

    <action>
    click("bid")
    </action>

    For textbox items use:
    
    <action>
    fill("bid", str)
    </action>

    For links, checkboxes, buttons, etc. in screenshot format, use the following action:
    <action>
    mouse_click(x: float, y: float, button: Literal['left', 'middle', 'right'] = 'left')
    </action>
    
    To fill in a text box in screenshot format, use:
    <action>
    keyboard_type(text) 
    </action>


    Remember you can only use one action at a time. Check the history for more context about which action you already took.
  action_concrete_example: |
   if doing ax tree format, use:
    <action>
    fill("4", "my text")
    </action>
   if doing screenshot format, to click at coordinates (612, 455) on the screenshot, use:
    <action>
    mouse_click(x=612, y=455)
    </action>
